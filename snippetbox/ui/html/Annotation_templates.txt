
Для файлов шаблонов(templates) мы будем использовать именование следующего формата
<название>.<роль>.tmpl, где <роль> будет одно из трех page(страница), partial(часть) или layout(макет).
Возможность определить роль шаблона из самого названия файла поможет нам, когда придет время создания кеша шаблонов.

Для того чтобы использовать шаблоны, потребуется импортировать пакет Go html/template,
который предоставляет множество функций для безопасного чтения и рендеринга HTML шаблонов.
Можно использовать функции из данного пакета для парсинга файла шаблона, а затем выполнить сам шаблон.
______________________________________________________________________________________________________________________
При добавлении дополнительных страниц в веб-приложение будет использоваться некоторая общая стандартная HTML разметка,
некий каркас. Данный каркас будет использован на каждой странице, в него будет входить например, заголовок,
меню навигации и метаданные внутри HTML элемента <head>. По сути, у нас на таких страницах как «Контакты»
и «О проекте» будет одна и та же HTML разметка кроме тех данных, что будут находится в теге <body>.

Чтобы избавить нас от лишнего набора текста и предотвратить дублирование одного
и того же HTML в нескольких файлах, рекомендуется создать макет(layout) или главный шаблон,
содержащий общую структуру, который затем можно дополнить данными из других файлов шаблона.

Большим преимуществом использования такого шаблонизатора для работы с шаблонами является то,
что с ним можно четко определять содержание конкретной страницы в отдельных файлах,
и в этих файлах контролировать, какой именно каркас будет использоваться на определенной странице.
Это очень полезно для больших приложений, где на разных страницах может потребоваться использование разных макетов.
______________________________________________________________________________________________________________________

Для некоторых приложений может потребоваться разбить определенные фрагменты HTML на части,
которые можно повторно использовать на разных страницах или макетах.
Для примера давайте создадим файл partial, содержащий HTML разметку подвала для веб-приложения.

В коде выше мы использовали выражение {{template}} для вызова определенного шаблона из другого шаблона.
Шаблонизатор в Go, также предоставляет выражение {{block}} ... {{end}}, которое можно использовать вместо {{template}}.

Оно работает как {{template}}, за исключением того, что позволяет указать некоторое содержимое по умолчанию,
если вызываемого шаблона нет в текущем наборе шаблонов.

Говоря о веб-приложении, это полезно, когда требуется предоставить некоторый контент по умолчанию например,
боковое меню сайта (sidebar), которую отдельные страницы могут переписать по разному в зависимости от обстоятельств.

