
Папка cmd будет содержать папки разных приложений в проекте.
На данный момент у нас будет только одно исполняемое приложение
и это наше веб-приложение. Оно будет находиться в папке cmd/web;

Папка pkg будет содержать вспомогательный код, не зависящий от приложения в проекте.
Мы будем использовать данную папку для хранения вспомогательного кода,
который потенциально может быть повторно использован. Это могут быть вспомогательные
средства проверки данных и модели базы данных для проекта;

Папка ui будет содержать файлы HTML шаблона для пользовательского интерфейса,
используемые веб-приложением. В частности, папка ui/html будет содержать HTML шаблоны,
а папка ui/static будет содержать статические файлы (например, CSS, JS и изображения)

______________________________________________________________________________________________________

У данной структуры есть два больших преимущества:

В структуре есть четкое разделение между Go файлами с кодом и файлами пользовательского интерфейса (HTML, CSS, JS)
которые никак с Go не связаны. Весь написанный нами код на Go будет находиться исключительно в папках cmd и pkg.
Корень проекта останется свободным для хранения ресурсов, не относящихся к Go.
Это могут быть файлы пользовательского интерфейса, make-файлы и настройки модулей (включая наш файл go.mod).

Данная структура упростит работу с веб-приложением, когда дело дойдет до развития и развертывания приложения в будущем;
Структура отлично масштабируется, если вы хотите добавить в свой проект еще одно исполняемое приложение.
Например, вы можете захотеть добавить CLI (Command Line Interface) для автоматизации некоторых
административных задач в будущем. С такой структурой можно создать это CLI приложение в cmd/cli,
и оно сможет импортировать и повторно использовать весь код, который была написан в папке pkg